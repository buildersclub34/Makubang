Great question 🙌 Let’s map out **Makubang’s flow for both the Delivery Partner App** and the **Customer Mobile App**. I’ll give you a detailed **step-by-step flow** for each so you can see how the experience ties together.

---

# **1. Customer Mobile App Flow (Makubang User App)**

### **Onboarding & Discovery**

1. Open app → Onboarding screens (intro to Makubang: watch food, order instantly).
2. Login / Signup → via phone, email, or social login.
3. Select interests (cuisine, food types, tags) for personalized recommendations.

### **Home & Feed**

4. Land on video feed (Instagram/TikTok style).
5. Scroll reels posted by restaurants & influencers.
6. Explore tab → random trending food videos nearby.
7. Search tab → search dishes, cuisines, restaurants.
8. Social → follow friends, restaurants, influencers.

### **Engagement**

9. Like, comment, share reels.
10. Save/favorite dishes to profile.

### **Ordering Flow**

11. **Slide left** on video → dish added to cart.
12. **Slide right** → instant buy flow.
13. Go to Cart → adjust quantity, add notes.
14. Checkout → Razorpay payment (UPI, card, wallet).
15. GST auto-calculated on invoice.

### **Post-Order**

16. Order confirmed → restaurant notified.
17. Delivery partner assigned via Delivery App → live tracking visible.
18. Push notifications → “Order being prepared → Picked up → Out for delivery → Delivered.”
19. Delivery tracking on map inside app.
20. Review food, rate delivery, share reel again.

---

# **2. Delivery Partner App Flow**

### **Onboarding**

1. Delivery partner installs app (Makubang Delivery).
2. Signup & KYC verification (Aadhar, PAN, bank details).
3. Select delivery zones (HSR Layout initially).
4. Set availability status → Online / Offline.

### **Order Assignment**

5. When user places order → restaurant confirms prep time.
6. Order sent to Delivery App via API → available delivery partners notified.
7. Nearest/available partner gets request → Accept / Reject.
8. If accepted → order assigned; else moves to next available partner.

### **Pickup**

9. Delivery partner gets restaurant details + dish details + order ID.
10. Navigate to restaurant via map integration.
11. Pickup confirmation (scan QR code / OTP).

### **Delivery**

12. Partner navigates to customer location.
13. Real-time GPS tracking updates to Customer App.
14. In-app chat/call support with customer if needed.

### **Completion**

15. On delivery → customer OTP or digital signature → proof of delivery.
16. Partner marks order complete → triggers payment settlement cycle.
17. Delivery rating collected (both sides).

### **Earnings & Wallet**

18. Delivery partner sees earnings per order, weekly payouts.
19. Commission model configurable from Admin panel.

---

# **3. Interaction Between Apps**

* **Order Created** (Customer App) → **Order Service (Backend)** → **Restaurant Dashboard**.
* **Restaurant Confirms Prep** → Backend notifies **Delivery App**.
* **Delivery Partner Assigned** → Updates order status on backend.
* **Customer App** shows live tracking from Delivery App API.
* **Order Completed** → Backend updates both Customer App & Restaurant Dashboard.

---

⚡ This way:

* Customer sees smooth discovery + instant ordering + live tracking.
* Delivery partner has Uber-style flow (accept/reject, pickup, drop, earnings).
* Restaurants only focus on content + food prep.
* Backend orchestrates everything.

---

Do you want me to now **turn this into visual flow diagrams** (Customer App + Delivery App) that you can plug directly into your pitch deck and Replit/Windsurf prompts?